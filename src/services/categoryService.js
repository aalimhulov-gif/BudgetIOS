import { addDoc, collection, getDocs, query, where } from 'firebase/firestore';
import { db } from '../firebase';

// –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const createDefaultCategories = async (userId) => {
  console.log('üè∑Ô∏è –°–æ–∑–¥–∞—é –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
  
  if (!userId) {
    throw new Error('userId –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
  }
  
  const defaultCategories = [
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
    { name: '–ó–∞—Ä–ø–ª–∞—Ç–∞', type: 'income', userId },
    { name: '–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞', type: 'income', userId },
    { name: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', type: 'income', userId },
    { name: '–î—Ä—É–≥–æ–µ', type: 'income', userId },
    
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
    { name: '–ü—Ä–æ–¥—É–∫—Ç—ã', type: 'expense', userId },
    { name: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', type: 'expense', userId },
    { name: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', type: 'expense', userId },
    { name: '–ó–¥–æ—Ä–æ–≤—å–µ', type: 'expense', userId },
    { name: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', type: 'expense', userId },
    { name: '–û–¥–µ–∂–¥–∞', type: 'expense', userId },
    { name: '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏', type: 'expense', userId },
    { name: '–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã', type: 'expense', userId },
    { name: '–î—Ä—É–≥–æ–µ', type: 'expense', userId }
  ];

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const existingCategories = await getDocs(
      query(collection(db, 'categories'), where('userId', '==', userId))
    );

    console.log('üìä –ù–∞–π–¥–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', existingCategories.size);

    if (existingCategories.empty) {
      console.log('‚ûï –°–æ–∑–¥–∞—é –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –æ–¥–Ω–æ–π –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
      for (let i = 0; i < defaultCategories.length; i++) {
        const category = defaultCategories[i];
        console.log(`üìù –°–æ–∑–¥–∞—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é ${i + 1}/${defaultCategories.length}: ${category.name}`);
        
        await addDoc(collection(db, 'categories'), {
          ...category,
          createdAt: new Date()
        });
      }
      
      console.log('‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
      return `–°–æ–∑–¥–∞–Ω–æ ${defaultCategories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`;
    } else {
      console.log('‚ÑπÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ');
      return '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç';
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    console.error('‚ùå –ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
    console.error('‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
    throw error;
  }
};